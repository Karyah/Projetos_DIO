Variáveis:

um espaço na memoria do computador, onde se pode guardar valores.

instância: objeto
classe: classe
local : dentro de métodos
parâmetro: na assinatura do método

padrão pra criar uma variável:
visibilidade, modificador, tipo nome = valor inicial

são case sensitive.

-----------------------------------------------------
Tipos de Dados:

São valores e consequentemente operações que as variáveis podem assumir e 
sofrer, respectivamente.

Tipificação:
	estática(forte) vs dinâmica(fraco)

estático: vai ser sempre esse tipo de variavel.
dinâmico: n é obrigado a definir o tipo de variavel.

	primitivo vs composto

primitivos: dados mais básicos, atômicos e homogêneos. valores numéricos e textuais.
(Atômicos significam que os valores não podem se repetir e nem atributos com mais de um valor.)
compostos: ligado a poo.

Opções de tipos de dados:

-textual

exemplos:

char(16 bit unicode) - muito complexo e trabalhoso. 
String(classe, n é primitivo) - utilizamos muito esse. 

-numeral

exemplos:
(de menor capacidade de armazenamento a maior)
byte
short
int 
long
float
double

-lógico(v ou f)

exemplos:
boolean (true ou false)

-objeto(ligados a poo)

Valores iniciais(definidos caso não tenham sido inicializados): 
Tipos numericos:0, 0L, 0.0f, 0.0d
Char: '\u0000'
String: null
Boolean: false

boas práticas: usar de forma adequada etc.

--------------------------------------------------
Operadores aritméticos:

São símbolos especiais, os quais são capazes de realizar ações
específicas em um, dois ou mais operandos e, em seguida, retornar 
um resultado. 

pós-fixado: exp++ ou exp--
primeiro usa a expressão e dps soma ou diminui uma unidade.

prefixado: ++exp ou --exp

aritmético: +,-,*,/ e %
cálculos.

atribuição: =, +=, -=, *=, /= e %=

int i = ++k -> i=k+1
int j = k-- -> j=k; k = k-1

float f = 1.5f + 4.5f

PRIORIDADE DE EXECUÇÃO (DO MAIOR AO MENOR RESPECTIVAMENTE):

pós fixado, prefixado, multiplicativo, aditivo e atribuição.

Casting:
É a transformação de uma determinada variável de tipo menos específico
para um tipo mais específico ou vice-versa.

upcast: baixo nivel p alto - implícito
downcast: alto nivel p baixo - explícito

long l; int i = 10; l =i
int i; long l = 100; i = (int)l;

double d; float f =10.5f; d = f;
float f; double d=10.5d; f = (float)d;

